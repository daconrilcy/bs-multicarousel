@use "_variables" as v;
.multi-item-carousel{
  display: block;
  position: relative;
  overflow: hidden;
  padding: 0;
    margin: 0;
}
.multi-item-carousel.pointer-event {
  touch-action: pan-y;
}

.multi-item-carousel-inner {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  display: flex;
  position: relative;
  flex-wrap: nowrap;
  margin-right: calc(-0.5 * var(--bs-gutter-x));
  margin-left: calc(-0.5 * var(--bs-gutter-x));
}
.multi-item-carousel-inner > * {
  flex-shrink: 0;
  max-width: 100%;
  padding-right: calc(var(--bs-gutter-x) * 0.5);
  padding-left: calc(var(--bs-gutter-x) * 0.5);
}

.multi-item-carousel-inner{
  .carousel-item {
    flex: 1 0 0;
    display: block;
    margin: 0;
    transition: none;
    width: unset;

    .image-container {
      width: 100%;
      padding-top: 50%; /* Ratio 4:3 (4/3 * 100 = 75) */
      position: relative;

      img {
        display: block !important;
        position: absolute;
        top: 0;
        left: 0;
        width: auto;
        height: 100%;
        object-fit: cover;
      }
    }
  }
  .carousel-item.item-to-left {
    transform: translateX(calc(-100%));
  }

  .carousel-item.item-to-right {
    transform: translateX(100%);
  }

  .carousel-item.transitionleft {
    transform: translateX(calc(-100%));
    transition: transform 0.6s ease;
  }

  .carousel-item.transitionright {
    transform: translateX(100%) + 0.5rem;
    transition: transform 0.6s ease;
  }

  @for $i from 0 through 11 {
    .carousel-item.item-#{$i + 1} {
      flex: 0 0 auto;
      width: calc((100% / 12) * ($i + 1));
    }
  }

  @for $i from 0 through length(v.$breaks) - 1 {
    @media (min-width: map-get(v.$grid-breakpoints, nth(v.$breaks, $i + 1))) {
      @for $j from 0 through 11 {
        .carousel-item.item-#{nth(v.$breaks, $i + 1)}-#{$j + 1} {
          flex: 0 0 auto;
          width: calc((100% / 12) * ($j + 1));
        }
      }
    }
  }
}