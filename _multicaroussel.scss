@use "_variables" as v;
@import 'images';

.carousels-container{
  padding-bottom: 10rem; //Necessary because we hide overflow in main container and so when slide is hovered, bottom will be hidden
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

$bs-gutter-x: 0.5rem;
$bs-gutter-y: 0;
$halfGutter: $bs-gutter-x/2;

.multi-item-carousel {
  display: block;
  position: relative;
  overflow: visible;
  margin-top: 2rem;

  &.pointer-event {
    touch-action: pan-y;
  }

  &-inner {
    display: flex;
    position: relative;
    white-space: nowrap;
    margin-right: calc(-0.5 * $bs-gutter-x);
    margin-left: calc(-0.5 * $bs-gutter-x);

    > * {
      flex-shrink: 0;
      max-width: 100%;
      padding-right: calc($bs-gutter-x * 0.5);
      padding-left: calc($bs-gutter-x * 0.5);
    }
    .carousel-item {
      flex: 1 0 0;
      display: inline-block; /* Afficher les items côte à côte */
      vertical-align: middle;   /* Aligner les items en haut */
      white-space: normal;   /* Permettre le retour à la ligne à l'intérieur des items */
      margin: 0;
      transition: none;
      width: unset;
      opacity: 0;
      &.active {
        display: block;
        opacity: 1;
      }


      &.item-to-left {
        transform: translateX(-100%);
      }

      &.item-to-right {
        transform: translateX(100%);
      }

      &.transitionleft,
      &.transitionright {
        transition: transform 0.6s ease;
      }

      &.transitionleft {
        transform: translateX(-100%);
      }

      &.transitionright {
        transform: translateX(100%);
      }

      &.transitionback {
        transform: translateX(0);
        transition: transform 0.6s ease;
      }

      @for $x from 2 through 6 {
        &.transitionright.x#{$x},
        &.transitionleft.x#{$x},
        &.transitionback.x#{$x} {
          transition-duration: calc(0.6s / $x);
        }
      }
    }



    @for $i from 1 through 12 {
      .carousel-item.item-#{$i} {
        flex: 0 0 auto;
        width: calc(100% / 12 * $i);
      }
    }

    @for $i from 0 through length(v.$breaks) - 1 {
      @media (min-width: map-get(v.$grid-breakpoints, nth(v.$breaks, $i + 1))) {
        @for $j from 1 through 12 {
          .carousel-item.item-#{nth(v.$breaks, $i + 1)}-#{$j} {
            flex: 0 0 auto;
            width: calc(100% / 12 * $j);
          }
        }
      }
    }
  }
}
//Modifications of default Bootstrap 5 carousel
.multi-item-carousel {
  // comportement des items
  $easeTime: 0.2s;
  $fontSizeCard: 1rem;
  $fontSizeCard-sm:0.5rem;
  .carousel-item {
    .card-container {
      top:0;
      .card {
        width: 100%;
        overflow: hidden;
        position: relative;
        font-size: $fontSizeCard;
        top: 0;
        margin-left: 0;
        left: 0;

        .card-img-top {
          width: 200%;
          margin-left: -50%;
          height: 100%;
          object-fit: cover;
        }

        .card-group-body {
          display: block;
          margin: 0;
          padding: 0;
          background-color: red;
          height: 100%;
          font-size: 0;
          h5 {
            font-weight: 600;
            font-size: 0;
          }
          .card-body {
            background-color: green;
            padding: 0;
          }
        }
      }
    }

    &:hover {
      @for $i from 0 through length(v.$breaks) - 1 {
        @media (min-width: map-get(v.$grid-breakpoints, nth(v.$breaks, $i + 1))) {
          @if nth(v.$breaks, $i + 1) == 'xs'{
            &.last-element {
              &:hover {
                .card{
                  margin-left: calc(-100% - $bs-gutter-x);
                }
              }
            }
          }
          .card-container {
            .card {
              font-size: map-get(v.$fontSizeCard, nth(v.$breaks, $i+1));
              .card-group-body {
                font-size: inherit;
                h5 {
                  font-size: calc(map-get(v.$fontSizeCard, nth(v.$breaks, $i+1)) * 1.5);
                }
              }
            }
          }
        }
      }
      .card-container {
        padding-right: $halfGutter;
        position: absolute;
        transition: top ease $easeTime;
        .card {
          margin-left: -50%;
          cursor: pointer;
          z-index: 20;
          width: 200%;
          margin-top:-50%;
          left: $halfGutter;
          box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.35);
          transition: all ease $easeTime;
          .card-img-top {
            width: 120%;
            margin-left: -20%;
            transition: all ease $easeTime;
          }
          .card-group-body {
            padding: 0.5rem;
            transition: all ease $easeTime;
            h5 {
              transition: all ease $easeTime;
            }
          }
        }
      }
    }

    &.first-element {
      &:hover {
        .card{
          margin-left: - $halfGutter;
        }
      }
    }
    &.last-element {
      &:hover {
        .card{
          margin-left: -100%;
        }
      }
    }
  }
  // Indicatateurs de navigation
  .carousel-indicators {
    z-index: 10;
    padding-bottom: 1rem;
    padding-top: 1rem;
    margin-bottom: -0.5rem;
    [data-bs-target] {
      background-color: white;
      border: 1px solid white;
      width: 30%;
      height: 4px;
      margin-bottom: 2px;
      margin-top: 2px;
      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);

      &:hover, &.active {
        height: 10px;
        margin-top: -4px;
        transform: translateY(3px);
        opacity: 0.75;
      }

      &.active {
        opacity: 1;
        box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
      }

      &.active:hover {
        cursor: default;
      }
    }
  }
}
// Boutons de navigation
//Div de Zone etendant la surface de detection des boutons
.carousel-bouton-zone {
  position: absolute;
  top: 0;
  bottom: 0;
  display: flex;
  width: 6rem;
  left: -2rem;
  z-index: 6;

  &.right {
    left: unset;
    right: -2rem;
    padding-right: 0;
  }
  .carousel-control-prev {
    padding-right: 0.5rem;
  }
  .carousel-control-next{
    padding-left: 0.5rem;
  }


  &:hover {
    .carousel-control-next, .carousel-control-prev {
      opacity: 0.5;
      transition: opacity 0.2s;

      .carousel-control-prev-icon, .carousel-control-next-icon {
        transform: scale(1.2);
        transition: ease 0.2s;
      }
    }

    .carousel-control-prev:hover, .carousel-control-next:hover {
      opacity: 1;
      transition: opacity 0.2s;
    }
  }
  //Boutons de navigation
  .carousel-control-prev {
    left: 2rem;
    .carousel-control-prev-icon {
      background-image: $encoded-svg-prev-white;
    }
  }

  .carousel-control-next {
    right: 2rem;
    .carousel-control-next-icon {
      background-image: $encoded-svg-next-white;
    }
  }

  .carousel-control-prev, .carousel-control-next {
    width: 3rem;
    z-index: 12;
    background-color: rgb(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity 0.2s;

    .carousel-control-prev-icon, .carousel-control-next-icon {
      transform: scale(0);
      transition: ease 0.2s;
    }
  }
}
.carousels-container{
  padding-bottom: 10rem; //Necessary because we hide overflow in main container and so when slide is hovered, bottom will be hidden
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

$bs-gutter-x: 0.5rem;
$bs-gutter-y: 0;
$halfGutter: $bs-gutter-x/2;
.multi-item-carousel {
  display: block;
  position: relative;
  overflow: visible;
  margin-top: 2rem;

  &.pointer-event {
    touch-action: pan-y;
  }

  &-inner {
    display: flex;
    position: relative;
    white-space: nowrap;
    margin-right: calc(-0.5 * $bs-gutter-x);
    margin-left: calc(-0.5 * $bs-gutter-x);

    > * {
      flex-shrink: 0;
      max-width: 100%;
      padding-right: calc($bs-gutter-x * 0.5);
      padding-left: calc($bs-gutter-x * 0.5);
    }
    .carousel-item {
      flex: 1 0 0;
      display: inline-block; /* Afficher les items côte à côte */
      vertical-align: middle;   /* Aligner les items en haut */
      white-space: normal;   /* Permettre le retour à la ligne à l'intérieur des items */
      margin: 0;
      transition: none;
      width: unset;
      opacity: 0;
      &.active {
        display: block;
        opacity: 1;
      }


      &.item-to-left {
        transform: translateX(-100%);
      }

      &.item-to-right {
        transform: translateX(100%);
      }

      &.transitionleft,
      &.transitionright {
        transition: transform 0.6s ease;
      }

      &.transitionleft {
        transform: translateX(-100%);
      }

      &.transitionright {
        transform: translateX(100%);
      }

      &.transitionback {
        transform: translateX(0);
        transition: transform 0.6s ease;
      }

      @for $x from 2 through 6 {
        &.transitionright.x#{$x},
        &.transitionleft.x#{$x},
        &.transitionback.x#{$x} {
          transition-duration: calc(0.6s / $x);
        }
      }
    }



    @for $i from 1 through 12 {
      .carousel-item.item-#{$i} {
        flex: 0 0 auto;
        width: calc(100% / 12 * $i);
      }
    }

    @for $i from 0 through length(v.$breaks) - 1 {
      @media (min-width: map-get(v.$grid-breakpoints, nth(v.$breaks, $i + 1))) {
        @for $j from 1 through 12 {
          .carousel-item.item-#{nth(v.$breaks, $i + 1)}-#{$j} {
            flex: 0 0 auto;
            width: calc(100% / 12 * $j);
          }
        }
      }
    }
  }
}
//Modifications of default Bootstrap 5 carousel
.multi-item-carousel {
  // comportement des items
  $easeTime: 0.2s;
  $fontSizeCard: 1rem;
  $fontSizeCard-sm:0.5rem;
  .carousel-item {
    .card-container {
      top:0;
      .card {
        width: 100%;
        overflow: hidden;
        position: relative;
        font-size: $fontSizeCard;
        top: 0;
        margin-left: 0;
        left: 0;

        .card-img-top {
          width: 200%;
          margin-left: -50%;
          height: 100%;
          object-fit: cover;
        }

        .card-group-body {
          display: block;
          margin: 0;
          padding: 0;
          background-color: red;
          height: 100%;
          font-size: 0;
          h5 {
            font-weight: 600;
            font-size: 0;
          }
          .card-body {
            background-color: green;
            padding: 0;
          }
        }
      }
    }

    &:hover {
      @for $i from 0 through length(v.$breaks) - 1 {
        @media (min-width: map-get(v.$grid-breakpoints, nth(v.$breaks, $i + 1))) {
          @if nth(v.$breaks, $i + 1) == 'xs'{
            &.last-element {
              &:hover {
                .card{
                  margin-left: calc(-100% - $bs-gutter-x);
                }
              }
            }
          }
          .card-container {
            .card {
              font-size: map-get(v.$fontSizeCard, nth(v.$breaks, $i+1));
              .card-group-body {
                font-size: inherit;
                h5 {
                  font-size: calc(map-get(v.$fontSizeCard, nth(v.$breaks, $i+1)) * 1.5);
                }
              }
            }
          }
        }
      }
      .card-container {
        padding-right: $halfGutter;
        position: absolute;
        transition: top ease $easeTime;
        .card {
          margin-left: -50%;
          cursor: pointer;
          z-index: 20;
          width: 200%;
          margin-top:-50%;
          left: $halfGutter;
          box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.35);
          transition: all ease $easeTime;
          .card-img-top {
            width: 120%;
            margin-left: -20%;
            transition: all ease $easeTime;
          }
          .card-group-body {
            padding: 0.5rem;
            transition: all ease $easeTime;
            h5 {
              transition: all ease $easeTime;
            }
          }
        }
      }
    }

    &.first-element {
      &:hover {
        .card{
          margin-left: - $halfGutter;
        }
      }
    }
    &.last-element {
      &:hover {
        .card{
          margin-left: -100%;
        }
      }
    }
  }
  // Indicatateurs de navigation
  .carousel-indicators {
    z-index: 10;
    padding-bottom: 1rem;
    padding-top: 1rem;
    margin-bottom: -0.5rem;
    [data-bs-target] {
      background-color: white;
      border: 1px solid white;
      width: 30%;
      height: 4px;
      margin-bottom: 2px;
      margin-top: 2px;
      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);

      &:hover, &.active {
        height: 10px;
        margin-top: -4px;
        transform: translateY(3px);
        opacity: 0.75;
      }

      &.active {
        opacity: 1;
        box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
      }

      &.active:hover {
        cursor: default;
      }
    }
  }
}
// Boutons de navigation
//Div de Zone etendant la surface de detection des boutons
.carousel-bouton-zone {
  position: absolute;
  top: 0;
  bottom: 0;
  display: flex;
  width: 6rem;
  left: -2rem;
  z-index: 6;

  &.right {
    left: unset;
    right: -2rem;
    padding-right: 0;
  }
  .carousel-control-prev {
    padding-right: 0.5rem;
  }
  .carousel-control-next{
    padding-left: 0.5rem;
  }


  &:hover {
    .carousel-control-next, .carousel-control-prev {
      opacity: 0.5;
      transition: opacity 0.2s;

      .carousel-control-prev-icon, .carousel-control-next-icon {
        transform: scale(1.2);
        transition: ease 0.2s;
      }
    }

    .carousel-control-prev:hover, .carousel-control-next:hover {
      opacity: 1;
      transition: opacity 0.2s;
    }
  }
  //Boutons de navigation
  .carousel-control-prev {
    left: 2rem;
    .carousel-control-prev-icon {
      background-image: $encoded-svg-prev-white;
    }
  }

  .carousel-control-next {
    right: 2rem;
    .carousel-control-next-icon {
      background-image: $encoded-svg-next-white;
    }
  }

  .carousel-control-prev, .carousel-control-next {
    width: 3rem;
    z-index: 12;
    background-color: rgb(0, 0, 0, 0.5);
    opacity: 0;
    transition: opacity 0.2s;

    .carousel-control-prev-icon, .carousel-control-next-icon {
      transform: scale(0);
      transition: ease 0.2s;
    }
  }
}
